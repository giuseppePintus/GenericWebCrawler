version: '3.8'

services:
  testing:
    build: ./docker/testing
    image: testing-service
    # Se necessario, mappa volumi o setta variabili:
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
    # Esempio di default command (non obbligatorio se gi√† definito in Dockerfile)
    command: ["python", "/app/src/notebook/testing_hallucination_detection.py"]
  crawler:
    build:
      context: .
      dockerfile: docker/crawler/Dockerfile
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  embedding:
    build:
      context: .
      dockerfile: docker/embedding/Dockerfile
    volumes:
      - ./config:/config:ro  # Mount config directory at root level
      - ./data:/app/data
      - ./logs:/app/logs
      - ./scripts:/scripts:ro
    environment:
      - PYTHONUNBUFFERED=1
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    depends_on:
      - milvus
    networks:
      - crawler_network
      - milvus-net

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - ./data/etcd:/etcd
    command:
      - etcd
      - --advertise-client-urls=http://127.0.0.1:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --data-dir=/etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./data/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus
    image: milvusdb/milvus:v2.3.3
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ./data/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/api/v1/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - crawler_network
      - milvus-net

networks:
  crawler_network:
  milvus-net:
    name: milvus-net